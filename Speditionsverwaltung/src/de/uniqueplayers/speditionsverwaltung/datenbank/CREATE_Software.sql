--LÃ¶schen der Datenbanken
DROP TABLE spediverwaltung.auftraege IF EXISTS CASCADE;
DROP TABLE spediverwaltung.bewerbung IF EXISTS CASCADE;
DROP TABLE spediverwaltung.urlaub IF EXISTS CASCADE;
DROP TABLE spediverwaltung.fahrer IF EXISTS CASCADE;
DROP TABLE spediverwaltung.register IF EXISTS CASCADE;
DROP TABLE spediverwaltung.raenge IF EXISTS CASCADE;
DROP TABLE spediverwaltung.spedition IF EXISTS CASCADE;
DROP TABLE spediverwaltung.konto IF EXISTS CASCADE;

--Erstellen der Datenbanken
CREATE TABLE spediverwaltung.raenge(
r_id            INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
r_name          VARCHAR(500),
r_funktionen    BOOLEAN,
CONSTRAINT r_id PRIMARY KEY(r_id)
);

CREATE TABLE spediverwaltung.konto(
k_id            INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
k_einnahmen     DOUBLE,
k_ausgaben      DOUBLE,
k_zeit          DATETIME,
k_von           VARCHAR(500),
k_an            VARCHAR(500),
k_verwendung    VARCHAR(9999),
k_geld          DOUBLE,
k_Verantwortlich    VARCHAR(500),
CONSTRAINT k_idPK PRIMARY KEY(k_id)
);

CREATE TABLE spediverwaltung.spedition(
sp_id           INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
sp_name         VARCHAR(500)        NOT NULL,
k_id            INTEGER             NOT NULL,
f_id            INTEGER             NOT NULL,
CONSTRAINT sp_idPK PRIMARY KEY(sp_id),
CONSTRAINT k_idFK FOREIGN KEY(k_id) REFERENCES spediverwaltung.konto
);
CREATE TABLE spediverwaltung.auftraege(
a_id            INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
a_start         VARCHAR(500),
a_ziel          VARCHAR(500),
a_fracht        VARCHAR(500),
a_entfernung    VARCHAR(500),
a_wert          DOUBLE,
a_schaden       DOUBLE,
a_steuern       DOUBLE,
a_wartung       DOUBLE,
a_maut          DOUBLE,
a_umsatz        DOUBLE,
f_id            INTEGER             NOT NULL,
sp_id           INTEGER             NOT NULL,
CONSTRAINT a_idPK PRIMARY KEY(a_id),
CONSTRAINT sp_idFK1 FOREIGN KEY(sp_id) REFERENCES spediverwaltung.spedition
);

CREATE TABLE spediverwaltung.register(
re_id           INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
f_Email         VARCHAR(500),
f_username      VARCHAR(500),
f_passwort      VARCHAR(500),
CONSTRAINT re_id_f_EmailPK PRIMARY KEY(re_id,f_Email)
);

CREATE TABLE spediverwaltung.fahrer(
f_id            INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
f_username      VARCHAR(500),
f_vorname       VARCHAR(20),
f_nachname      VARCHAR(20),
f_alter         INTEGER,
f_Email         VARCHAR(500),
f_last_login    DATETIME,
f_IP_adresse    INTEGER DEFAULT NULL,
f_passwort      VARCHAR(500),
r_id            INTEGER             NOT NULL,
sp_id           INTEGER             NOT NULL,
a_id            INTEGER             NOT NULL,
re_id           INTEGER             NOT NULL,
CONSTRAINT f_id_f_EmailPK PRIMARY KEY(f_id,f_Email),
CONSTRAINT r_idFK FOREIGN KEY(r_id) REFERENCES spediverwaltung.raenge,
CONSTRAINT sp_idFK0 FOREIGN KEY(sp_id) REFERENCES spediverwaltung.spedition,
CONSTRAINT a_idFK FOREIGN KEY(a_id) REFERENCES spediverwaltung.auftraege,
CONSTRAINT re_idFK FOREIGN KEY(re_id,f_Email) REFERENCES spediverwaltung.register
);

CREATE TABLE spediverwaltung.bewerbung(
b_id            INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
f_vorname       VARCHAR(20),
f_nachname      VARCHAR(20),
f_Email         VARCHAR(500),
b_status        BOOLEAN,
f_username      VARCHAR(500),
sp_id           INTEGER,
f_id            INTEGER,
CONSTRAINT b_id_f_EmailPK PRIMARY KEY(b_id,f_Email),
CONSTRAINT sp_idFK2 FOREIGN KEY(sp_id) REFERENCES spediverwaltung.spedition,
CONSTRAINT f_idFK0 FOREIGN KEY(f_id,f_Email) REFERENCES spediverwaltung.fahrer
);

CREATE TABLE spediverwaltung.urlaub(
u_id            INTEGER             NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
u_start         DATETIME,
u_ende          DATETIME,
f_id            INTEGER             NOT NULL,
f_Email         VARCHAR(500)        NOT NULL,
f_username      VARCHAR(500),
u_grund         VARCHAR(9999),
CONSTRAINT u_idPK PRIMARY KEY(u_id),
CONSTRAINT f_idFK2 FOREIGN KEY(f_id,f_Email) REFERENCES spediverwaltung.fahrer
);